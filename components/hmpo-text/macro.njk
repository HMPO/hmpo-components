
{% macro hmpoText(ctx, params, base) %}
    {%- set params = hmpoGetParams(ctx, params, base) %}

    {%- set pageHeading = {
        isPageHeading: true,
        classes: "govuk-label--l"
    } if params.isPageHeading %}

    {%- set args = {
        id: params.id,
        name: params.id,
        label: merge(
            pageHeading,
            { attributes: { id: params.id + "-label" } },
            hmpoGetOptions(ctx, params, "label")
        ),
        hint: hmpoGetOptions(ctx, params, "hint", true),
        prefix: hmpoGetOptions(ctx, params, "prefix", true) if params.prefix,
        value: hmpoGetValue(ctx, params),
        errorMessage: hmpoGetError(ctx, params),
        type: params.type,
        inputmode: params.inputmode,
        classes: "" + (params.classes if params.classes else "govuk-!-width-one-half") + (" js-nopaste" if params.noPaste),
        formGroup: params.formGroup,
        autocomplete: params.autocomplete,
        rows: params.rows,
        attributes: hmpoGetAttributes(ctx, params, {
            "aria-required": hmpoGetValidatorAttribute(ctx, params, "required", null, false),
            "min": hmpoGetValidatorAttribute(ctx, params, "min", 0),
            "max": hmpoGetValidatorAttribute(ctx, params, "max", 0),
            "maxlength": hmpoGetValidatorAttribute(ctx, params, "maxlength", 0) or hmpoGetValidatorAttribute(ctx, params, "exactlength", 0)
        } | filter(null))
    } %}

    {%- if params.type == "textarea" %}
        {%- from "govuk/components/textarea/macro.njk" import govukTextarea %}
        {{- govukTextarea(args) }}
    {%- else %}
        {%- from "govuk/components/input/macro.njk" import govukInput %}
        {{- govukInput(args) }}
    {%- endif %}
{% endmacro %}
